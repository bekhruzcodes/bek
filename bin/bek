#!/usr/bin/env php
<?php

// Try multiple autoload paths
$autoloadPaths = [
    __DIR__ . '/../vendor/autoload.php',           // When used as a dependency
    __DIR__ . '/../../autoload.php',               // Nested vendor directory
    __DIR__ . '/../../../autoload.php',            // Even deeper nesting
    getcwd() . '/vendor/autoload.php'              // Current working directory
];

$autoloadFound = false;
foreach ($autoloadPaths as $path) {
    if (file_exists($path)) {
        require $path;
        $autoloadFound = true;
        break;
    }
}

if (!$autoloadFound) {
    echo "Error: Autoload file not found. Make sure you've run composer install.\n";
    exit(1);
}

use Bekhruz\Bek\VersionControl;

// Check if any command is passed
if ($argc < 2) {
    echo "Usage: bek <command> [options]\n";
    exit(1);
}

// Get command and optional arguments
$command = $argv[1];
$options = array_slice($argv, 2);

try {
    // Use current working directory as the repository path
    $vc = new VersionControl(getcwd());

    switch ($command) {
        case 'init':
            echo $vc->init() . "\n";
            break;
        case 'commit':
            if (empty($options)) {
                echo "Usage: bek commit <filename>\n";
                exit(1);
            }
            echo $vc->commit($options[0]) . "\n";
            break;
        case 'log':
            echo "Commit History:\n" . $vc->log() . "\n";
            break;
        case 'revert':
            if (count($options) < 2) {
                echo "Usage: bek revert <commit_id> <filename>\n";
                exit(1);
            }
            echo $vc->revert($options[0], $options[1]) . "\n";
            break;
        default:
            echo "Unknown command: $command\n";
            echo "Available commands: init, commit <filename>, log, revert <commit_id> <filename>\n";
            exit(1);
    }
} catch (Exception $e) {
    echo $e->getMessage() . "\n";
    exit(1);
}